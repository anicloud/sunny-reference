<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:amq="http://activemq.apache.org/schema/core"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:jms="http://www.springframework.org/schema/jms"
       xsi:schemaLocation="http://activemq.apache.org/schema/core
       http://activemq.apache.org/schema/core/activemq-core.xsd
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.0.xsd
       http://www.springframework.org/schema/jms
       http://www.springframework.org/schema/jms/spring-jms-4.0.xsd">

    <context:property-placeholder location="classpath:/properties/jms.properties" ignore-unresolvable="true" order="1"/>
    <!--jms factory-->
    <amq:connectionFactory id="connectionFactory"
                           brokerURL="tcp://${jms.broker.url}:${jms.broker.port}"/>
    <bean id="jmsQueueConnectionFactory"
          class="org.springframework.jms.connection.UserCredentialsConnectionFactoryAdapter">
        <property name="targetConnectionFactory" ref="connectionFactory"/>
        <!--<property name="username" value="${mq.username}"/>-->
    </bean>
    <bean id="jmsConnectionFactory"
          class="org.springframework.jms.connection.CachingConnectionFactory">
        <property name="targetConnectionFactory" ref="jmsQueueConnectionFactory"/>
        <property name="sessionCacheSize" value="50"/>
        <!--<property name="exceptionListener" ref="jmsExceptionListener"/>-->
    </bean>

    <amq:topic id="strategyTopic" physicalName="${jms.queue.sunny.strategy.state}" />
    <!--jms template-->
    <bean id="strategyJmsTemplate"
          class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="jmsConnectionFactory"/>
        <!-- publish sub mode -->
        <property name="pubSubDomain" value="true"/>
        <!--<property name="defaultDestinationName" value="${jms.queue.sunny.strategy.state}"/>-->
        <property name="defaultDestination" ref="strategyTopic"/>
        <!-- Value = javax.jms.DeliveryMode.PERSISTENT -->
        <property name="deliveryMode" value="2"/>
        <!-- Value = javax.jms.Session.CLIENT_ACKNOWLEDGE -->
        <property name="sessionAcknowledgeMode" value="1"/>
        <!-- Needs to be true for the deliveryMode to work -->
        <property name="explicitQosEnabled" value="true"/>
    </bean>

    <bean id="consumerListener" class="org.springframework.jms.listener.DefaultMessageListenerContainer"
          p:connectionFactory-ref="jmsConnectionFactory"
          p:sessionTransacted="true"
          p:destination-ref="strategyTopic"
          p:messageListener-ref="consumerMessageListener"
          p:sessionAcknowledgeMode="1"/>

    <amq:topic id="deviceNotifyTopic" physicalName="${jms.queue.sunny.device.state}" />
    <bean id="deviceJmsTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="jmsConnectionFactory"/>
        <!-- publish sub mode -->
        <property name="pubSubDomain" value="true"/>
        <!--<property name="defaultDestinationName" value="${jms.queue.sunny.strategy.state}"/>-->
        <property name="defaultDestination" ref="deviceNotifyTopic"/>
        <!-- Value = javax.jms.DeliveryMode.PERSISTENT -->
        <property name="deliveryMode" value="2"/>
        <!-- Value = javax.jms.Session.CLIENT_ACKNOWLEDGE -->
        <property name="sessionAcknowledgeMode" value="1"/>
        <!-- Needs to be true for the deliveryMode to work -->
        <property name="explicitQosEnabled" value="true"/>
    </bean>

    <bean id="deviceListener" class="org.springframework.jms.listener.DefaultMessageListenerContainer"
          p:connectionFactory-ref="jmsConnectionFactory"
          p:sessionTransacted="true"
          p:destination-ref="deviceNotifyTopic"
          p:messageListener-ref="deviceStateListener"
          p:sessionAcknowledgeMode="1"/>

    <amq:topic id="paramTopic" physicalName="${jms.queue.sunny.stub.param}" />
    <!--jms template-->
    <bean id="paramJmsTemplate"
          class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="jmsConnectionFactory"/>
        <!-- publish sub mode -->
        <property name="pubSubDomain" value="true"/>
        <!--<property name="defaultDestinationName" value="${jms.queue.sunny.strategy.state}"/>-->
        <property name="defaultDestination" ref="paramTopic"/>
        <!-- Value = javax.jms.DeliveryMode.PERSISTENT -->
        <property name="deliveryMode" value="2"/>
        <!-- Value = javax.jms.Session.CLIENT_ACKNOWLEDGE -->
        <property name="sessionAcknowledgeMode" value="1"/>
        <!-- Needs to be true for the deliveryMode to work -->
        <property name="explicitQosEnabled" value="true"/>
    </bean>
    <bean id="paramListener" class="org.springframework.jms.listener.DefaultMessageListenerContainer"
          p:connectionFactory-ref="jmsConnectionFactory"
          p:sessionTransacted="true"
          p:destination-ref="deviceNotifyTopic"
          p:messageListener-ref="deviceParamListener"
          p:sessionAcknowledgeMode="1"/>
</beans>